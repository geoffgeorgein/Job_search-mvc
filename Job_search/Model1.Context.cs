//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Job_search
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MVC_PROJECTEntities : DbContext
    {
        public MVC_PROJECTEntities()
            : base("name=MVC_PROJECTEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Job> Jobs { get; set; }
        public virtual DbSet<Login_tab> Login_tab { get; set; }
        public virtual DbSet<App_Id> App_Id { get; set; }
    
        public virtual int sp_JInsert(Nullable<int> cid, string skills, Nullable<int> exp, string jbstatus, string ldate)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var skillsParameter = skills != null ?
                new ObjectParameter("skills", skills) :
                new ObjectParameter("skills", typeof(string));
    
            var expParameter = exp.HasValue ?
                new ObjectParameter("exp", exp) :
                new ObjectParameter("exp", typeof(int));
    
            var jbstatusParameter = jbstatus != null ?
                new ObjectParameter("jbstatus", jbstatus) :
                new ObjectParameter("jbstatus", typeof(string));
    
            var ldateParameter = ldate != null ?
                new ObjectParameter("ldate", ldate) :
                new ObjectParameter("ldate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_JInsert", cidParameter, skillsParameter, expParameter, jbstatusParameter, ldateParameter);
        }
    }
}
